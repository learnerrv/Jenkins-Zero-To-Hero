pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        bat 'echo passed'
        // bat 'git clone https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build and Test') {
      steps {
        bat """
        docker run --rm ^
          -v %cd%:/app ^
          -w /app/java-maven-sonar-argocd-helm-k8s/spring-boot-app ^
          maven:3.9.9-eclipse-temurin-17 mvn clean package
        """
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://host.docker.internal:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          bat """
          docker run --rm ^
            -v %cd%:/app ^
            -w /app/java-maven-sonar-argocd-helm-k8s/spring-boot-app ^
            maven:3.9.9-eclipse-temurin-17 mvn sonar:sonar -Dsonar.login=%SONAR_AUTH_TOKEN% -Dsonar.host.url=${SONAR_URL}
          """
        }
      }
    }

    stage('Build and Push Docker Image') {
  environment {
    DOCKER_IMAGE = "learnerrv/ultimate-cicd:${BUILD_NUMBER}"
  }
  steps {
    withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
      script {
        bat """
        echo Logging in to Docker Hub...
        docker login -u %DOCKER_USER% -p %DOCKER_PASS%

        echo Building Docker image...
        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
        docker build -t ${DOCKER_IMAGE} .

        echo Pushing Docker image...
        docker push ${DOCKER_IMAGE}
        """
      }
    }
  }
}


 stage('Update Deployment File') {
        environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "learnerrv"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          bat """
          git config user.email "rupal.xyz@gmail.com"
          git config user.name "Rupal"
          powershell -Command "(Get-Content java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml) -replace 'replaceImageTag','${BUILD_NUMBER}' | Set-Content java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
          git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
          git commit -m "Update deployment image to version ${BUILD_NUMBER}"
          git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          """
        }
      }
    }



  }
}
