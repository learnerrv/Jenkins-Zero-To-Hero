pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        bat 'echo passed'
        // bat 'git clone https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Build and Test') {
      steps {
        bat """
        docker run --rm ^
          -v %cd%:/app ^
          -w /app/java-maven-sonar-argocd-helm-k8s/spring-boot-app ^
          abhishekf5/maven-abhishek-docker-agent:v1 mvn clean package
        """
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://host.docker.internal:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          bat """
          docker run --rm ^
            -v %cd%:/app ^
            -w /app/java-maven-sonar-argocd-helm-k8s/spring-boot-app ^
            abhishekf5/maven-abhishek-docker-agent:v1 mvn sonar:sonar -Dsonar.login=%SONAR_AUTH_TOKEN% -Dsonar.host.url=${SONAR_URL}
          """
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          bat """
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          docker build -t ${DOCKER_IMAGE} .
          """
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            docker.image("${DOCKER_IMAGE}").push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "iam-veeramalla"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          bat """
          git config user.email "abhishek.xyz@gmail.com"
          git config user.name "Abhishek Veeramalla"
          powershell -Command "(Get-Content java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml) -replace 'replaceImageTag','${BUILD_NUMBER}' | Set-Content java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
          git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
          git commit -m "Update deployment image to version ${BUILD_NUMBER}"
          git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          """
        }
      }
    }
  }
}
